{"ast":null,"code":"var _jsxFileName = \"/home/enzyme/Desktop/react-native udemy/mark-app/screens/CategoryScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { CATEGORIES, PRODUCTS } from \"../data/dummy-data\";\nimport ProductItem from \"../components/ProductItem\";\n\nvar CategoryScreen = function CategoryScreen(props) {\n  var renderProductItem = function renderProductItem(itemData) {\n    return React.createElement(ProductItem, {\n      title: itemData.item.title,\n      price: itemData.item.price,\n      quantity: itemData.item.quantity,\n      seller: itemData.item.seller,\n      image: itemData.item.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var catId = props.navigation.getParam('categoryId');\n  var displayedProducts = PRODUCTS.filter(function (product) {\n    return product.categoryIds.indexOf(catId) >= 0;\n  });\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: displayedProducts,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: renderProductItem,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nCategoryScreen.navigationOptions = function (navigationData) {\n  var catId = navigationData.navigation.getParam('categoryId');\n  var selectedCategory = CATEGORIES.find(function (cat) {\n    return cat.id === catId;\n  });\n  return {\n    headerTitle: selectedCategory.title\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default CategoryScreen;","map":{"version":3,"sources":["/home/enzyme/Desktop/react-native udemy/mark-app/screens/CategoryScreen.js"],"names":["React","CATEGORIES","PRODUCTS","ProductItem","CategoryScreen","props","renderProductItem","itemData","item","title","price","quantity","seller","imageUrl","catId","navigation","getParam","displayedProducts","filter","product","categoryIds","indexOf","styles","screen","index","id","width","navigationOptions","navigationData","selectedCategory","find","cat","headerTitle","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,SAAQC,UAAR,EAAoBC,QAApB;AACA,OAAOC,WAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAG;AAE3B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ,EAAI;AAClC,WACI,oBAAC,WAAD;AACI,MAAA,KAAK,EAAEA,QAAQ,CAACC,IAAT,CAAcC,KADzB;AAEI,MAAA,KAAK,EAAEF,QAAQ,CAACC,IAAT,CAAcE,KAFzB;AAGI,MAAA,QAAQ,EAAEH,QAAQ,CAACC,IAAT,CAAcG,QAH5B;AAII,MAAA,MAAM,EAAEJ,QAAQ,CAACC,IAAT,CAAcI,MAJ1B;AAKI,MAAA,KAAK,EAAEL,QAAQ,CAACC,IAAT,CAAcK,QALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVD;;AAYA,MAAMC,KAAK,GAAGT,KAAK,CAACU,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,CAAd;AACA,MAAMC,iBAAiB,GAAGf,QAAQ,CAACgB,MAAT,CAAgB,UAAAC,OAAO;AAAA,WAAGA,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4BP,KAA5B,KAAsC,CAAzC;AAAA,GAAvB,CAA1B;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEN,iBADV;AAEI,IAAA,YAAY,EAAE,sBAACT,IAAD,EAAMgB,KAAN;AAAA,aAAehB,IAAI,CAACiB,EAApB;AAAA,KAFlB;AAGI,IAAA,UAAU,EAAEnB,iBAHhB;AAII,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE;AAAT,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CA3BD;;AA6BAtB,cAAc,CAACuB,iBAAf,GAAmC,UAACC,cAAD,EAAoB;AACnD,MAAMd,KAAK,GAAGc,cAAc,CAACb,UAAf,CAA0BC,QAA1B,CAAmC,YAAnC,CAAd;AACA,MAAMa,gBAAgB,GAAG5B,UAAU,CAAC6B,IAAX,CAAgB,UAAAC,GAAG;AAAA,WAAGA,GAAG,CAACN,EAAJ,KAAUX,KAAb;AAAA,GAAnB,CAAzB;AACA,SAAO;AACHkB,IAAAA,WAAW,EAAEH,gBAAgB,CAACpB;AAD3B,GAAP;AAGH,CAND;;AAQA,IAAMa,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,MAAM,EAAE;AACJY,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE;AAHZ;AADqB,CAAlB,CAAf;AAQA,eAAejC,cAAf","sourcesContent":["import React from 'react'\nimport {Text, View, StyleSheet, FlatList} from 'react-native'\n\nimport {CATEGORIES, PRODUCTS} from '../data/dummy-data'\nimport ProductItem from '../components/ProductItem'\n\nconst CategoryScreen = props=> {\n\n    const renderProductItem = itemData => {\n        return (\n            <ProductItem \n                title={itemData.item.title} \n                price={itemData.item.price} \n                quantity={itemData.item.quantity}\n                seller={itemData.item.seller}\n                image={itemData.item.imageUrl}\n            />\n        )\n    }\n\n    const catId = props.navigation.getParam('categoryId');\n    const displayedProducts = PRODUCTS.filter(product=> product.categoryIds.indexOf(catId) >= 0)\n\n    return (\n        <View style={styles.screen}>\n            <FlatList \n                data={displayedProducts} \n                keyExtractor={(item,index)=> item.id} \n                renderItem={renderProductItem}\n                style={{ width: '100%'}}\n            />\n        </View>\n    )\n}\n\nCategoryScreen.navigationOptions = (navigationData) => {\n    const catId = navigationData.navigation.getParam('categoryId')\n    const selectedCategory = CATEGORIES.find(cat=> cat.id ===catId)\n    return {\n        headerTitle: selectedCategory.title \n    }\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n})\n\nexport default CategoryScreen"]},"metadata":{},"sourceType":"module"}